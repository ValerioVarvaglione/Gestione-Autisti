Endpoints:
AUTUSTI

1. GET http://localhost:3001/autisti
Descrizione:
Recupera tutti gli autisti dal database.

Richiesta:
Metodo: GET
Parametri: Nessuno
Risposta:
Status Code: 200 OK
Tipo: application/json
Corpo della risposta:
json

[
  {
    "id": 1,
    "nome": "Mario",
    "cognome": "Rossi",
    "email": "mario.rossi@example.com"
  },
  ...
]
Errori:
Status Code: 500 Internal Server Error
Corpo della risposta:
json
{ "error": "Errore durante il recupero degli autisti" }
##########################################################################################################
2. GET http://localhost:3000/autisti/{id}
Descrizione:
Recupera un singolo autista tramite il suo id.

Richiesta:
Metodo: GET
Parametri:
id (string) - L'ID dell'autista da recuperare.
Risposta:
Status Code: 200 OK
Tipo: application/json
Corpo della risposta:
json
{
  "id": 1,
  "nome": "Mario",
  "cognome": "Rossi",
  "email": "mario.rossi@example.com"
}
Errori:
Status Code: 500 Internal Server Error
Corpo della risposta:
json
{ "error": "Errore durante il recupero degli autisti" }

##########################################################################################################
3. POST http://localhost:3000/autisti/autista
Descrizione:
Aggiunge un nuovo autista al database.

Richiesta:
Metodo: POST
Parametri: Nessuno
Corpo della richiesta: application/json
json

{
  "nome": "Luigi",
  "cognome": "Verdi",
  "email": "luigi.verdi@example.com"
}
Risposta:
Status Code: 201 Created
Tipo: application/json
Corpo della risposta:
json

{ "message": "Autista aggiunto con successo!", "id": 2 }
Errori:
Status Code: 500 Internal Server Error
Corpo della risposta:
json
{ "error": "Errore durante l'aggiunta dell'autista" }

##########################################################################################################
4. POST http://localhost:3000/autisti/modifica
Descrizione:
Modifica i dati di un autista esistente nel database.

Richiesta:
Metodo: POST
Parametri: Nessuno
Corpo della richiesta: application/json
json

{
  "id": 1,
  "nome": "Mario",
  "cognome": "Rossi",
  "email": "nuovo.email@example.com"
}
Risposta:
Status Code: 200 OK
Tipo: application/json
Corpo della risposta:
json

{ "message": "Autista modificato con successo." }
Errori:
Status Code: 500 Internal Server Error
Corpo della risposta:
json
{ "error": "Errore durante la modifica dell'autista." }

##########################################################################################################
5. DELETE http://localhost:3000/autisti/cancella/{id}
Descrizione:
Cancella un autista dal database tramite il suo id.

Richiesta:
Metodo: DELETE
Parametri:
id (string) - L'ID dell'autista da cancellare.
Risposta:
Status Code: 200 OK
Tipo: application/json
Corpo della risposta:
json

{ "message": "Autista cancellato con successo." }
Errori:
Status Code: 500 Internal Server Error
Corpo della risposta:
json

{ "message": "Errore durante la cancellazione dell'autista." }

##########################################################################################################
##########################################################################################################
VEICOLI
1. GET http://localhost:3000/veicoli
Descrizione:
Recupera tutti i veicoli dal database.

Richiesta:
Metodo: GET
Parametri: Nessuno
Risposta:
Status Code: 200 OK
Tipo: application/json
Corpo della risposta:
json
[
  {
    "id": 1,
    "marca": "Fiat",
    "modello": "500",
    "anno": 2020
  },
  ...
]
Errori:
Status Code: 500 Internal Server Error
Corpo della risposta:
json
{ "error": "Errore durante il recupero del veicolo" }

##########################################################################################################
2. GET http://localhost:3000/veicoli/{ID}
Descrizione:
Recupera un singolo veicolo tramite il suo id.

Richiesta:
Metodo: GET
Parametri:
id (string) - L'ID del veicolo da recuperare.
Risposta:
Status Code: 200 OK
Tipo: application/json
Corpo della risposta:
json
{
  "id": 1,
  "marca": "Fiat",
  "modello": "500",
  "anno": 2020
}
Errori:
Status Code: 500 Internal Server Error
Corpo della risposta:
json
{ "error": "Errore durante il recupero del veicolo" }

##########################################################################################################

3. POST http://localhost:3000/veicoli/veicolo
Descrizione:
Aggiunge un nuovo veicolo al database.

Richiesta:
Metodo: POST
Parametri: Nessuno
Corpo della richiesta: application/json
json

{
  "marca": "Toyota",
  "modello": "Corolla",
  "anno": 2021
}
Risposta:
Status Code: 201 Created
Tipo: application/json
Corpo della risposta:
json

{ "message": "Veicolo aggiunto con successo!", "id": 2 }
Errori:
Status Code: 500 Internal Server Error
Corpo della risposta:
json

{ "error": "Errore durante l'aggiunta del veicolo" }

##########################################################################################################
4. POST http://localhost:3000/veicoli/modifica
Descrizione:
Modifica i dati di un veicolo esistente nel database.

Richiesta:
Metodo: POST
Parametri: Nessuno
Corpo della richiesta: application/json
json

{
  "id": 1,
  "marca": "Toyota",
  "modello": "Corolla",
  "anno": 2022
}
Risposta:
Status Code: 200 OK
Tipo: application/json
Corpo della risposta:
json

{ "message": "Veicolo aggiornato con successo." }
Errori:
Status Code: 500 Internal Server Error
Corpo della risposta:
json

{ "error": "Errore durante l'aggiornamento del veicolo" }
##########################################################################################################

5. DELETE http://localhost:3000/veicoli/cancella/{ID}
Descrizione:
Cancella un veicolo dal database tramite il suo id.

Richiesta:
Metodo: DELETE
Parametri:
id (string) - L'ID del veicolo da cancellare.
Risposta:
Status Code: 200 OK
Tipo: application/json
Corpo della risposta:
json

{ "message": "Veicolo cancellato con successo." }
Errori:
Status Code: 500 Internal Server Error
Corpo della risposta:
json

{ "message": "Errore durante la cancellazione del veicolo." }
##########################################################################################################
##########################################################################################################
CORSE


Endpoints:
1. GET http://localhost:3000/corse
Descrizione:
Recupera tutte le corse dal database.

Richiesta:
Metodo: GET
Parametri: Nessuno
Risposta:
Status Code: 200 OK
Tipo: application/json
Corpo della risposta:
json

[
  {
    "id": 1,
    "partenza": "Roma",
    "destinazione": "Milano",
    "data": "2023-10-10",
    "ora": "14:00",
    "autistaId": 2
  },
  ...
]
Errori:
Status Code: 500 Internal Server Error
Corpo della risposta:
json

{ "error": "Errore durante il recupero delle corse" }
##########################################################################################################

2. GET http://localhost:3000/corse/{ID}
Descrizione:
Recupera una corsa specifica tramite il suo id.

Richiesta:
Metodo: GET
Parametri:
id (string) - L'ID della corsa da recuperare.
Risposta:
Status Code: 200 OK
Tipo: application/json
Corpo della risposta:
json

{
  "id": 1,
  "partenza": "Roma",
  "destinazione": "Milano",
  "data": "2023-10-10",
  "ora": "14:00",
  "autistaId": 2
}
Errori:
Status Code: 404 Not Found
Corpo della risposta:
json

{ "error": "Corsa non trovata" }
Status Code: 500 Internal Server Error
Corpo della risposta:
json

{ "error": "Errore durante il recupero della corsa" }
##########################################################################################################

3. POST http://localhost:3000/corse
Descrizione:
Aggiunge una nuova corsa al database.

Richiesta:
Metodo: POST
Parametri: Nessuno
Corpo della richiesta: application/json
json

{
  "partenza": "Roma",
  "destinazione": "Milano",
  "data": "2023-10-15",
  "ora": "15:30",
  "autistaId": 1
}
Risposta:
Status Code: 201 Created
Tipo: application/json
Corpo della risposta:
json

{ "message": "Corsa aggiunta con successo!", "id": 2 }
Errori:
Status Code: 500 Internal Server Error
Corpo della risposta:
json

{ "error": "Errore durante l'inserimento della corsa" }
##########################################################################################################
4. POST http://localhost:3000/corse/modifica
Descrizione:
Modifica una corsa esistente nel database.

Richiesta:
Metodo: POST
Parametri: Nessuno
Corpo della richiesta: application/json
json

{
  "id": 1,
  "partenza": "Roma",
  "destinazione": "Napoli",
  "data": "2023-10-12",
  "ora": "10:00",
  "autistaId": 3
}
Risposta:
Status Code: 200 OK
Tipo: application/json
Corpo della risposta:
json

{ "message": "Corsa modificata con successo." }
Errori:
Status Code: 500 Internal Server Error
Corpo della risposta:
json

{ "error": "Errore durante la modifica della corsa." }
##########################################################################################################
5. DELETE http://localhost:3000/corse/{ID}
Descrizione:
Cancella una corsa dal database tramite il suo id.

Richiesta:
Metodo: DELETE
Parametri:
id (string) - L'ID della corsa da cancellare.
Risposta:
Status Code: 200 OK
Tipo: application/json
Corpo della risposta:
json

{ "message": "Corsa cancellata con successo." }
Errori:
Status Code: 500 Internal Server Error
Corpo della risposta:
json

{ "error": "Errore durante la cancellazione della corsa." }


##########################################################################################################
##########################################################################################################
Assegnazioni


1. Ottieni tutte le Assegnazioni
Metodo: GET
Percorso: http://localhost:3000/assegnazioni
Descrizione: Recupera tutte le assegnazioni.
Risposta:
200 OK
json

[
  {
    "id": 1,
    "dataPartenza": "2024-10-08T06:00:00.000Z",
    "dataArrivo": "2024-10-08T08:00:00.000Z",
    "idAutista": 1,
    "idMezzo": 2,
    "idTratta": 3,
    "stato": "attivo",
    "reportId": 123
  },
  {
    "id": 2,
    "dataPartenza": "2024-10-09T06:00:00.000Z",
    "dataArrivo": "2024-10-09T08:00:00.000Z",
    "idAutista": 2,
    "idMezzo": 3,
    "idTratta": 4,
    "stato": "completato",
    "reportId": 124
  }
]
500 Internal Server Error
json

{
  "error": "Errore durante il recupero delle assegnazioni"
}

##########################################################################################################
GET 
2. Ottieni Assegnazione per ID
Metodo: GET
Percorso: http://localhost:3000/assegnazioni/{ID}
Descrizione: Recupera un'assegnazione specifica in base al suo ID.
Parametri del Percorso:
id (obbligatorio): L'ID dell'assegnazione da recuperare.
Risposta:
200 OK
json

{
  "id": 1,
  "dataPartenza": "2024-10-08T06:00:00.000Z",
  "dataArrivo": "2024-10-08T08:00:00.000Z",
  "idAutista": 1,
  "idMezzo": 2,
  "idTratta": 3,
  "stato": "attivo",
  "reportId": 123
}
404 Not Found
json

{
  "error": "Assegnazione non trovata"
}
500 Internal Server Error
json

{
  "error": "Errore durante il recupero dell'assegnazione"
}
##########################################################################################################
3. Inserisci una Nuova Assegnazione
Metodo: POST
Percorso: http://localhost:3000/assegnazioni
Descrizione: Inserisce una nuova assegnazione nel database.
Corpo della Richiesta:
json

{
  "dataPartenza": "2024-10-08T06:00:00.000Z",
  "dataArrivo": "2024-10-08T08:00:00.000Z",
  "idAutista": 1,
  "idMezzo": 2,
  "idTratta": 3,
  "stato": "attivo",
  "reportId": 123
}
Risposta:
201 Created
json

{
  "message": "Assegnazione aggiunta con successo!",
  "id": 1
}
500 Internal Server Error
json

{
  "error": "Errore durante l'inserimento dell'assegnazione"
}
Esempio di Richiesta
http

POST /assegnazioni
Content-Type: application/json

{
  "dataPartenza": "2024-10-08T06:00:00.000Z",
  "dataArrivo": "2024-10-08T08:00:00.000Z",
  "idAutista": 1,
  "idMezzo": 2,
  "idTratta": 3,
  "stato": "attivo",
  "reportId": 123
}

##########################################################################################################
4. Modifica un'Assegnazione Esistente
Metodo: POST
Percorso: http://localhost:3000/assegnazioni/modifica
Descrizione: Modifica un'assegnazione esistente.
Corpo della Richiesta:
json

{
  "id": 1,
  "dataPartenza": "2024-10-08T06:00:00.000Z",
  "dataArrivo": "2024-10-08T08:00:00.000Z",
  "idAutista": 1,
  "idMezzo": 2,
  "idTratta": 3,
  "stato": "completato",
  "reportId": 123
}
Risposta:
200 OK
json

{
  "message": "Assegnazione modificata con successo."
}
500 Internal Server Error
json

{
  "error": "Errore durante la modifica dell'assegnazione."
}
Esempio di Richiesta
http

POST /assegnazioni/modifica
Content-Type: application/json

{
  "id": 1,
  "dataPartenza": "2024-10-08T06:00:00.000Z",
  "dataArrivo": "2024-10-08T08:00:00.000Z",
  "idAutista": 1,
  "idMezzo": 2,
  "idTratta": 3,
  "stato": "completato",
  "reportId": 123
}

##########################################################################################################
5. Cancella un'Assegnazione per ID
Metodo: DELETE
Percorso: http://localhost:3000/assegnazioni/{ID}
Descrizione: Cancella un'assegnazione specifica in base al suo ID.
Parametri del Percorso:
id (obbligatorio): L'ID dell'assegnazione da cancellare.
Risposta:
200 OK
json

{
  "message": "Assegnazione cancellata con successo."
}
500 Internal Server Error
json

{
  "error": "Errore durante la cancellazione dell'assegnazione."
}
Esempio di Richiesta
http

DELETE /assegnazioni/1
##########################################################################################################
6. Ottieni Assegnazioni Filtrate
Metodo: POST
Percorso: http://localhost:3000/assegnazioni/filtrate
Descrizione: Recupera assegnazioni filtrate in base all'autista e alle date fornite.
Corpo della Richiesta:
json

{
  "idAutista": 1,
  "dataInizio": "2024-10-01",
  "dataFine": "2024-10-31"
}
Risposta:
200 OK
json

[
  {
    "id": 1,
    "dataPartenza": "2024-10-08T06:00:00.000Z",
    "dataArrivo": "2024-10-08T08:00:00.000Z",
    "idAutista": 1,
    "idMezzo": 2,
    "idTratta": 3,
    "stato": "attivo",
    "reportId": 123
  }
]
404 Not Found
json

{
  "error": "Nessuna assegnazione trovata per i filtri forniti"
}
500 Internal Server Error
json

{
  "error": "Errore durante il recupero delle assegnazioni filtrate"
}
Esempio di Richiesta
http

POST /assegnazioni/filtrate
Content-Type: application/json

{
  "idAutista": 1,
  "dataInizio": "2024-10-01",
  "dataFine": "2024-10-31"
}







